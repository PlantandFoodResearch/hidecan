[{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/gwaspoly_output.html","id":"gwaspoly-example-data","dir":"Articles","previous_headings":"","what":"GWASpoly example data","title":"HIDECAN plot from GWASpoly output","text":"example GWASpoly output, based original example dataset GWASpoly package, can obtained get_gwaspoly_example_data() function: example, three traits analysed: tuber_eye_depth, tuber_shape sucrose. trait, GWAS scores computed four different genetic models: general, additive, 1-dom-alt 1-dom-ref: See Appendix section bottom vignette code used generate example data.","code":"gwaspoly_output <- get_gwaspoly_example_data()  class(gwaspoly_output) #> [1] \"GWASpoly.thresh\" #> attr(,\"package\") #> [1] \"GWASpoly\" ## Traits analysed names(gwaspoly_output@scores) #> [1] \"tuber_eye_depth\" \"tuber_shape\"     \"sucrose\"  ## Genetic models tests head(gwaspoly_output@scores[[1]]) #>             general  additive 1-dom-alt 1-dom-ref #> c2_41437 0.45584445 0.4774282 0.1430731        NA #> c2_24258 0.32552500 0.1655215        NA 0.0431065 #> c2_21332 0.06251865 0.2263273 0.1562208 0.4488712 #> c2_21320 0.92927679 0.5774697        NA 1.0170807 #> c2_21318 0.09043940 0.2200563 0.1410284        NA #> c2_21314 0.19480464 0.6442068        NA 0.4286548"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/gwaspoly_output.html","id":"hidecan-plot-from-gwaspoly-output","dir":"Articles","previous_headings":"","what":"HIDECAN plot from GWASpoly output","title":"HIDECAN plot from GWASpoly output","text":"hidecan_plot_from_gwaspoly() function reads GWASpoly.thresh object, extracts marker scores combination trait genetic model, uses construct HIDECAN plot. y-axis, trait indicated first, genetic model next brackets:  HIDECAN plot, can easily see genomic region around 50Mb chromosome 10 significantly associated tuber eye depth shape, using either general additive model. region significantly associated either traits considering one simplex dominant models. sucrose phenotype, general model detected significant markers. possible specify traits /genetic models represented HIDECAN plot, via traits models arguments:","code":"hidecan_plot_from_gwaspoly(   gwaspoly_output,   remove_empty_chrom = TRUE   ) hidecan_plot_from_gwaspoly(   gwaspoly_output,   traits = c(\"tuber_eye_depth\", \"tuber_shape\"),   models = \"general\",   remove_empty_chrom = TRUE   )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/gwaspoly_output.html","id":"the-gwaspoly-constructor","dir":"Articles","previous_headings":"","what":"The GWASpoly constructor","title":"HIDECAN plot from GWASpoly output","text":"hood, hidecan_plot_from_gwaspoly() function relies GWAS_data_from_gwaspoly() constructor, takes input either: GWASpoly.fitted object (returned GWASpoly::GWASpoly() function), GWASpoly.thresh object (returned GWASpoly::set.threshold() function). function extracts marker scores traits genetic models present GWASpoly output, well length chromosomes. addition, input data GWASpoly.thresh object, extracts significance threshold combination trait genetic model, uses filter significant markers.","code":"gwaspoly_data <- GWAS_data_from_gwaspoly(gwaspoly_output)  ## GWAS_data objects, i.e. tibbles of marker scores str(gwaspoly_data$gwas_data_list, max.level = 1) #> List of 12 #>  $ tuber_eye_depth (general)  : GWAS_dat [3,507 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (additive) : GWAS_dat [3,507 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (1-dom-alt): GWAS_dat [2,054 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (1-dom-ref): GWAS_dat [2,174 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_shape (general)      : GWAS_dat [3,507 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_shape (additive)     : GWAS_dat [3,507 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_shape (1-dom-alt)    : GWAS_dat [2,054 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ tuber_shape (1-dom-ref)    : GWAS_dat [2,174 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ sucrose (general)          : GWAS_dat [3,506 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ sucrose (additive)         : GWAS_dat [3,507 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ sucrose (1-dom-alt)        : GWAS_dat [2,054 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame) #>  $ sucrose (1-dom-ref)        : GWAS_dat [2,174 × 4] (S3: GWAS_data/tbl_df/tbl/data.frame)  ## GWAS_data_thr objects, i.e. tibbles of significant markers str(gwaspoly_data$gwas_data_thr_list, max.level = 1) #> List of 12 #>  $ tuber_eye_depth (general)  : GWAS_dt_ [1 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (additive) : GWAS_dt_ [3 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (1-dom-alt): GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_eye_depth (1-dom-ref): GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_shape (general)      : GWAS_dt_ [2 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_shape (additive)     : GWAS_dt_ [2 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_shape (1-dom-alt)    : GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ tuber_shape (1-dom-ref)    : GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ sucrose (general)          : GWAS_dt_ [2 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ sucrose (additive)         : GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ sucrose (1-dom-alt)        : GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame) #>  $ sucrose (1-dom-ref)        : GWAS_dt_ [0 × 4] (S3: GWAS_data_thr/tbl_df/tbl/data.frame)  ## Chromosomes length str(gwaspoly_data$chrom_length) #> tibble [13 × 2] (S3: tbl_df/tbl/data.frame) #>  $ chromosome: Ord.factor w/ 13 levels \"0\"<\"1\"<\"2\"<\"3\"<..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ length    : int [1:13] 36454137 88583876 48564909 61870684 72026885 51998374 59263222 56628128 56785385 61466245 ..."},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/gwaspoly_output.html","id":"appendix-reproducing-the-gwaspoly-example-data","dir":"Articles","previous_headings":"","what":"Appendix: reproducing the GWASpoly example data","title":"HIDECAN plot from GWASpoly output","text":"example dataset provided get_gwaspoly_example_data() can reproduced following code:","code":"library(GWASpoly)  genofile <- system.file(\"extdata\", \"TableS1.csv\", package = \"GWASpoly\") phenofile <- system.file(\"extdata\", \"TableS2.csv\", package = \"GWASpoly\")  ## Reading example data data <- read.GWASpoly(   ploidy = 4,   pheno.file = phenofile,   geno.file = genofile,   format = \"ACGT\",   n.traits = 13,   delim = \",\" )  ## Computing K matrix data.original <- set.K(   data,   LOCO = FALSE,   n.core = 2 )  ## Performing GWAS gwaspoly_res <- GWASpoly(   data.original,   models = c(\"general\", \"additive\", \"1-dom\"),   traits = c(\"tuber_eye_depth\", \"tuber_shape\", \"sucrose\"),   n.core = 2 )  ## Computing significance threshold ## Object returned by get_gwaspoly_example_data() gwaspoly_res_thr <- set.threshold(   gwaspoly_res,    method = \"M.eff\",    level = 0.05 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan-step-by-step.html","id":"formatting-input-data","dir":"Articles","previous_headings":"","what":"Formatting input data","title":"Creating a HIDECAN plot step by step","text":"hood, hidecan package relies S3 classes, really just tibbles specific columns. constructors S3 classes perform series checks computations make sure required columns (chromosome, score, position) present data. GWAS results data-frames turned GWAS_data objects GWAS_data() constructor: DE results data-frames turned DE_data objects DE_data() constructor: Candidate genes data-frames turned CAN_data objects CAN_data() constructor: constructors throw error required column missing input data (e.g. chromosome column): also compute marker gene scores adjusted p-values necessary (see Input data section hidecan vignette). example, DE results, provide padj column (adjusted p-values genes) rather score column, constructor compute score column based padj column. can also notice position column computed based start end genes:","code":"gwas_data <- GWAS_data(x[[\"GWAS\"]])  class(gwas_data) #> [1] \"GWAS_data\"  \"tbl_df\"     \"tbl\"        \"data.frame\"  head(gwas_data) #> # A tibble: 6 × 4 #>   id                chromosome position  score #>   <chr>             <chr>         <dbl>  <dbl> #> 1 ST4.03ch00_172333 ST4.03ch00   172333 0.342  #> 2 ST4.03ch00_172690 ST4.03ch00   172690 0.179  #> 3 ST4.03ch00_194668 ST4.03ch00   194668 0.0479 #> 4 ST4.03ch00_194695 ST4.03ch00   194695 0.469  #> 5 ST4.03ch00_194712 ST4.03ch00   194712 0.893  #> 6 ST4.03ch00_275624 ST4.03ch00   275624 0.380 de_data <- DE_data(x[[\"DE\"]])  class(de_data) #> [1] \"DE_data\"    \"tbl_df\"     \"tbl\"        \"data.frame\"  head(de_data) #> # A tibble: 6 × 9 #>   gene               chrom…¹   padj log2Fo…²  start    end label   score posit…³ #>   <chr>              <chr>    <dbl>    <dbl>  <dbl>  <dbl> <chr>   <dbl>   <dbl> #> 1 PGSC0003DMG400013… ST4.03…  0.972  7.28e-4 1.75e5 1.79e5 Seri…  0.0121  1.77e5 #> 2 PGSC0003DMG400045… ST4.03…  0.922 -8.78e-4 4.61e5 4.62e5 N-ac…  0.0352  4.62e5 #> 3 PGSC0003DMG400045… ST4.03… NA      2.87e-3 6.91e5 6.93e5 Gene… NA       6.92e5 #> 4 PGSC0003DMG400022… ST4.03…  0.609  2.93e-2 8.05e5 8.06e5 Cons…  0.215   8.05e5 #> 5 PGSC0003DMG400022… ST4.03…  0.176  1.47e-1 1.25e6 1.25e6 Cons…  0.756   1.25e6 #> 6 PGSC0003DMG402018… ST4.03…  0.950  1.25e-3 1.51e6 1.51e6 Stri…  0.0225  1.51e6 #> # … with abbreviated variable names ¹​chromosome, ²​log2FoldChange, ³​position ## CAN_data constructor can_data <- CAN_data(x[[\"CAN\"]])  class(can_data) #> [1] \"CAN_data\"   \"tbl_df\"     \"tbl\"        \"data.frame\"  head(can_data) #> # A tibble: 6 × 7 #>   id                   chromosome    start      end name       gene_name posit…¹ #>   <chr>                <chr>         <dbl>    <dbl> <chr>      <chr>       <dbl> #> 1 PGSC0003DMG400003155 ST4.03ch03 46757152 46762127 4CL        4-coumar…  4.68e7 #> 2 PGSC0003DMG400014223 ST4.03ch03 57466692 57469946 4CL2       4-coumar…  5.75e7 #> 3 PGSC0003DMG400011189 ST4.03ch07  1001854  1006278 HQT        HQT        1.00e6 #> 4 PGSC0003DMG400005492 ST4.03ch05 36342746 36347409 PAL        phenylal…  3.63e7 #> 5 PGSC0003DMG400005279 ST4.03ch05 42523943 42525912 peroxidase peroxida…  4.25e7 #> 6 PGSC0003DMG400007782 ST4.03ch03 38537202 38540209 PHO1A      PHO1A      3.85e7 #> # … with abbreviated variable name ¹​position gwas_wrong_input <- x[[\"GWAS\"]] |>    select(-chromosome)  GWAS_data(gwas_wrong_input) #> Error: Input data-frame is missing the following columns: 'chromosome'. ## Input tibble head(x[[\"DE\"]]) #> # A tibble: 6 × 7 #>   gene                 chromosome   padj log2FoldChange   start     end label    #>   <chr>                <chr>       <dbl>          <dbl>   <dbl>   <dbl> <chr>    #> 1 PGSC0003DMG400013995 ST4.03ch00  0.972       0.000728  174833  179264 Serine … #> 2 PGSC0003DMG400045238 ST4.03ch00  0.922      -0.000878  461366  461756 N-acyle… #> 3 PGSC0003DMG400045392 ST4.03ch00 NA           0.00287   690521  692816 Gene of… #> 4 PGSC0003DMG400022052 ST4.03ch00  0.609       0.0293    804763  805569 Conserv… #> 5 PGSC0003DMG400022093 ST4.03ch00  0.176       0.147    1247383 1252635 Conserv… #> 6 PGSC0003DMG402018893 ST4.03ch00  0.950       0.00125  1510542 1513352 Stricto…  ## Output of the DE_data constructor head(de_data) #> # A tibble: 6 × 9 #>   gene               chrom…¹   padj log2Fo…²  start    end label   score posit…³ #>   <chr>              <chr>    <dbl>    <dbl>  <dbl>  <dbl> <chr>   <dbl>   <dbl> #> 1 PGSC0003DMG400013… ST4.03…  0.972  7.28e-4 1.75e5 1.79e5 Seri…  0.0121  1.77e5 #> 2 PGSC0003DMG400045… ST4.03…  0.922 -8.78e-4 4.61e5 4.62e5 N-ac…  0.0352  4.62e5 #> 3 PGSC0003DMG400045… ST4.03… NA      2.87e-3 6.91e5 6.93e5 Gene… NA       6.92e5 #> 4 PGSC0003DMG400022… ST4.03…  0.609  2.93e-2 8.05e5 8.06e5 Cons…  0.215   8.05e5 #> 5 PGSC0003DMG400022… ST4.03…  0.176  1.47e-1 1.25e6 1.25e6 Cons…  0.756   1.25e6 #> 6 PGSC0003DMG402018… ST4.03…  0.950  1.25e-3 1.51e6 1.51e6 Stri…  0.0225  1.51e6 #> # … with abbreviated variable names ¹​chromosome, ²​log2FoldChange, ³​position"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan-step-by-step.html","id":"computing-chromosome-length","dir":"Articles","previous_headings":"","what":"Computing chromosome length","title":"Creating a HIDECAN plot step by step","text":"input datasets formatted appropriately, used compute length chromosomes present data. done combine_chrom_length() function, applied list GWAS_data, DE_data CAN_data objects: function works calling element list compute_chrom_length() function. function, according whether input tibble markers (GWAS_data) genes (DE_data CAN_data), looks maximum value either position column (markers) end column (genes).","code":"chrom_length <- combine_chrom_length(list(gwas_data,                                           de_data,                                           can_data))  chrom_length #> # A tibble: 13 × 2 #>    chromosome   length #>    <chr>         <dbl> #>  1 ST4.03ch00 45813526 #>  2 ST4.03ch01 88627702 #>  3 ST4.03ch02 48614228 #>  4 ST4.03ch03 62263578 #>  5 ST4.03ch04 72170119 #>  6 ST4.03ch05 52040326 #>  7 ST4.03ch06 59476545 #>  8 ST4.03ch07 56715111 #>  9 ST4.03ch08 56937627 #> 10 ST4.03ch09 61539681 #> 11 ST4.03ch10 59687482 #> 12 ST4.03ch11 45409456 #> 13 ST4.03ch12 61152223 head(compute_chrom_length(gwas_data), 3) #> # A tibble: 3 × 2 #>   chromosome   length #>   <chr>         <dbl> #> 1 ST4.03ch00 45467783 #> 2 ST4.03ch01 88589716 #> 3 ST4.03ch02 48614228  head(compute_chrom_length(de_data), 3) #> # A tibble: 3 × 2 #>   chromosome   length #>   <chr>         <dbl> #> 1 ST4.03ch00 45813526 #> 2 ST4.03ch01 88627702 #> 3 ST4.03ch02 48578978"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan-step-by-step.html","id":"applying-threshold","dir":"Articles","previous_headings":"","what":"Applying threshold","title":"Creating a HIDECAN plot step by step","text":"Next, GWAS DE results tibbles filtered according threshold, order retain significant markers genes. done apply_threshold() function. function two (rather self-explanatory) arguments: score_thr log2fc_thr. applied GWAS_data object, function filters markers score value set score_thr argument (log2fc_thr argument ignored), returns object class GWAS_data_thr: DE_data object, apply_threshold function filters genes based score log2(fold-change), returns object class DE_data_thr: Finally, applied CAN_data object, apply_threshold() function simply returns input tibble object class CAN_data_thr: GWAS_data, DE_data CAN_data objects, GWAS_data_thr, DE_data_thr CAN_data_thr objects really just tibbles.","code":"dim(gwas_data) #> [1] 72847     4  gwas_data_thr <- apply_threshold(gwas_data,                                   score_thr = 4)  class(gwas_data_thr) #> [1] \"GWAS_data_thr\" \"tbl_df\"        \"tbl\"           \"data.frame\"  dim(gwas_data_thr) #> [1] 37  4  head(gwas_data_thr) #> # A tibble: 6 × 4 #>   id                  chromosome position score #>   <chr>               <chr>         <dbl> <dbl> #> 1 ST4.03ch00_22680252 ST4.03ch00 22680252  4.41 #> 2 ST4.03ch01_6317643  ST4.03ch01  6317643  4.15 #> 3 ST4.03ch01_7671100  ST4.03ch01  7671100  4.43 #> 4 ST4.03ch01_8653747  ST4.03ch01  8653747  4.69 #> 5 ST4.03ch01_12842648 ST4.03ch01 12842648  6.85 #> 6 ST4.03ch01_13334335 ST4.03ch01 13334335  5.24 dim(de_data) #> [1] 25163     9  de_data_thr <- apply_threshold(de_data,                                 score_thr = 2,                                log2fc_thr = 0.5)  class(de_data_thr) #> [1] \"DE_data_thr\" \"tbl_df\"      \"tbl\"         \"data.frame\"  dim(de_data_thr) #> [1] 2 9  head(de_data_thr) #> # A tibble: 2 × 9 #>   gene                 chrom…¹    padj log2F…²  start    end label score posit…³ #>   <chr>                <chr>     <dbl>   <dbl>  <dbl>  <dbl> <chr> <dbl>   <dbl> #> 1 PGSC0003DMG400015948 ST4.03… 0.00480   0.757 3.30e7 3.30e7 Cons…  2.32  3.30e7 #> 2 PGSC0003DMG400029856 ST4.03… 0.00305   0.691 5.82e7 5.82e7 N-ac…  2.52  5.82e7 #> # … with abbreviated variable names ¹​chromosome, ²​log2FoldChange, ³​position dim(can_data) #> [1] 32  7  can_data_thr <- apply_threshold(can_data,                                  score_thr = 2,                                 log2fc_thr = 0.5)  class(can_data_thr) #> [1] \"CAN_data_thr\" \"tbl_df\"       \"tbl\"          \"data.frame\"  dim(can_data_thr) #> [1] 32  7  head(can_data_thr) #> # A tibble: 6 × 7 #>   id                   chromosome    start      end name       gene_name posit…¹ #>   <chr>                <chr>         <dbl>    <dbl> <chr>      <chr>       <dbl> #> 1 PGSC0003DMG400003155 ST4.03ch03 46757152 46762127 4CL        4-coumar…  4.68e7 #> 2 PGSC0003DMG400014223 ST4.03ch03 57466692 57469946 4CL2       4-coumar…  5.75e7 #> 3 PGSC0003DMG400011189 ST4.03ch07  1001854  1006278 HQT        HQT        1.00e6 #> 4 PGSC0003DMG400005492 ST4.03ch05 36342746 36347409 PAL        phenylal…  3.63e7 #> 5 PGSC0003DMG400005279 ST4.03ch05 42523943 42525912 peroxidase peroxida…  4.25e7 #> 6 PGSC0003DMG400007782 ST4.03ch03 38537202 38540209 PHO1A      PHO1A      3.85e7 #> # … with abbreviated variable name ¹​position"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan-step-by-step.html","id":"creating-the-hidecan-plot","dir":"Articles","previous_headings":"","what":"Creating the HIDECAN plot","title":"Creating a HIDECAN plot step by step","text":"Finally, filtered datasets combined list passed create_hidecan_plot() function, along tibble chromosome length. function generates HIDECAN ggplot:  function shares arguments hidecan_plot() wrapper controlling different aspects plot.","code":"create_hidecan_plot(   list(gwas_data_thr,        de_data_thr,        can_data_thr),   chrom_length )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"hidecan","text":"hidecan package takes input tibbles (data-frames) GWAS DE results candidate genes. input data-frames contain mandatory columns, depending type data. list example input datasets can obtained via get_example_data() function:","code":"x <- get_example_data()  str(x, max.level = 1) #> List of 3 #>  $ GWAS: tibble [72,847 × 4] (S3: tbl_df/tbl/data.frame) #>  $ DE  : tibble [25,163 × 7] (S3: tbl_df/tbl/data.frame) #>  $ CAN : tibble [32 × 6] (S3: tbl_df/tbl/data.frame)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"gwas-results","dir":"Articles","previous_headings":"Input data","what":"GWAS results","title":"hidecan","text":"GWAS results provided tibble data-frame, one row per genetic marker. data-frame contain least following columns: chromosome: character column, giving ID chromosome marker located; position: numeric column, physical position along chromosome (base pairs - bp) marker; either score padj: numeric column, providing either score (.e. -log10(p-value)) adjusted p-value marker. score column provided, padj column ignored. padj column provided, score column constructed -log10(padj). column present data-frame ignored. example valid input shown :","code":"head(x[[\"GWAS\"]]) #> # A tibble: 6 × 4 #>   id                chromosome position  score #>   <chr>             <chr>         <dbl>  <dbl> #> 1 ST4.03ch00_172333 ST4.03ch00   172333 0.342  #> 2 ST4.03ch00_172690 ST4.03ch00   172690 0.179  #> 3 ST4.03ch00_194668 ST4.03ch00   194668 0.0479 #> 4 ST4.03ch00_194695 ST4.03ch00   194695 0.469  #> 5 ST4.03ch00_194712 ST4.03ch00   194712 0.893  #> 6 ST4.03ch00_275624 ST4.03ch00   275624 0.380"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"differential-expression-results","dir":"Articles","previous_headings":"Input data","what":"Differential expression results","title":"hidecan","text":"DE results provided tibble data-frame, one row per gene. data-frame contain least following columns: chromosome: character column, giving ID chromosome gene located; start end: numeric columns, giving starting end position gene along chromosome (bp). two columns used calculate position gene half-way point start end gene. either score padj: numeric column, providing either score (.e. -log10(p-value)) adjusted p-value gene. score column provided, padj column ignored. padj column provided, score column constructed -log10(padj). either foldChange log2FoldChange: numeric column, giving either fold-change log2(fold-change) gene. log2FoldChange column provided, foldChange column ignored. foldChange column provided, log2FoldChange constructed log2(foldChange). column present data-frame ignored. example valid input shown : (Note example dataset, genes missing values padj column; corresponds genes filtered via independent filtering DEseq2 package).","code":"head(x[[\"DE\"]]) #> # A tibble: 6 × 7 #>   gene                 chromosome   padj log2FoldChange   start     end label    #>   <chr>                <chr>       <dbl>          <dbl>   <dbl>   <dbl> <chr>    #> 1 PGSC0003DMG400013995 ST4.03ch00  0.972       0.000728  174833  179264 Serine … #> 2 PGSC0003DMG400045238 ST4.03ch00  0.922      -0.000878  461366  461756 N-acyle… #> 3 PGSC0003DMG400045392 ST4.03ch00 NA           0.00287   690521  692816 Gene of… #> 4 PGSC0003DMG400022052 ST4.03ch00  0.609       0.0293    804763  805569 Conserv… #> 5 PGSC0003DMG400022093 ST4.03ch00  0.176       0.147    1247383 1252635 Conserv… #> 6 PGSC0003DMG402018893 ST4.03ch00  0.950       0.00125  1510542 1513352 Stricto…"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"candidate-genes","dir":"Articles","previous_headings":"Input data","what":"Candidate genes","title":"hidecan","text":"list candidate genes (e.g. genes previously found associated trait interest based literature search) can provided tibble data-frame, one row per gene. data-frame can also contain variants interest (see ). data-frame contain least following columns: chromosome: character column, giving ID chromosome gene located; start end: numeric columns, giving starting end position gene along chromosome (bp). two columns used calculate position gene half-way point start end gene. genomic variants markers, simply set start end columns physical position marker. name: character column, giving name candidate gene displayed HIDECAN plot. Set NA subset genes remove label plot (can help many genes close, avoid cluttering plot). column present data-frame ignored. example valid input shown :","code":"head(x[[\"CAN\"]]) #> # A tibble: 6 × 6 #>   id                   chromosome    start      end name       gene_name         #>   <chr>                <chr>         <dbl>    <dbl> <chr>      <chr>             #> 1 PGSC0003DMG400003155 ST4.03ch03 46757152 46762127 4CL        4-coumarate-CoA … #> 2 PGSC0003DMG400014223 ST4.03ch03 57466692 57469946 4CL2       4-coumarate-CoA … #> 3 PGSC0003DMG400011189 ST4.03ch07  1001854  1006278 HQT        HQT               #> 4 PGSC0003DMG400005492 ST4.03ch05 36342746 36347409 PAL        phenylalanine am… #> 5 PGSC0003DMG400005279 ST4.03ch05 42523943 42525912 peroxidase peroxidase        #> 6 PGSC0003DMG400007782 ST4.03ch03 38537202 38540209 PHO1A      PHO1A"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"creating-a-hidecan-plot","dir":"Articles","previous_headings":"","what":"Creating a HIDECAN plot","title":"hidecan","text":"hidecan_plot() function creates HIDECAN plot. takes input data-frames presented , well score log2(fold-change) thresholds used select significant markers genes. example, show markers score 4, corresponds p-value \\(1\\times10^{-4}\\), genes score 1.3, corresponds p-value 0.05. don’t place threshold log2(fold-change) genes:  Note possible provide subset possible input data, e.g. GWAS results list candidate genes:","code":"hidecan_plot(   gwas_list = x[[\"GWAS\"]],          ## data-frame of GWAS results             de_list = x[[\"DE\"]],              ## data-frame of DE results                 can_list = x[[\"CAN\"]],            ## data-frame of candidate genes               score_thr_gwas = -log10(0.0001),  ## sign. threshold for GWAS   score_thr_de = -log10(0.05),      ## sign. threshold for DE   log2fc_thr = 0                    ## log2FC threshold for DE ) hidecan_plot(   gwas_list = x[[\"GWAS\"]],             can_list = x[[\"CAN\"]],               score_thr_gwas = 4 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"removing-empty-chromosomes","dir":"Articles","previous_headings":"","what":"Removing empty chromosomes","title":"hidecan","text":"default, HIDECAN plot shows chromosomes present input data. However, possible chromosomes appear empty, contain significant gene marker, candidate gene. case, possible exclude “empty” chromosomes HIDECAN plot, remove_empty_chrom argument. demonstrate increasing score threshold applied GWAS results, order get fewer significant markers. case, chromosomes 0, 6, 9 10 contain significant marker gene interest:","code":"## Chromosomes 0, 6, 9 and 10 are empty hidecan_plot(   gwas_list = x[[\"GWAS\"]],             can_list = x[[\"CAN\"]],               score_thr_gwas = 5 ) hidecan_plot(   gwas_list = x[[\"GWAS\"]],             can_list = x[[\"CAN\"]],               score_thr_gwas = 5,   remove_empty_chrom = TRUE )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"selecting-chromosomes-and-genomic-positions","dir":"Articles","previous_headings":"","what":"Selecting chromosomes and genomic positions","title":"hidecan","text":"possible specify chromosomes represented HIDECAN plot, via chroms argument. example, following command restrict plot chromosomes 7 8:","code":"hidecan_plot(   gwas_list = x[[\"GWAS\"]],                       de_list = x[[\"DE\"]],                             can_list = x[[\"CAN\"]],                     score_thr_gwas = -log10(0.0001),     score_thr_de = -log10(0.05),         log2fc_thr = 0,   chroms = c(\"ST4.03ch07\", \"ST4.03ch08\") )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"colour-genes-by-log2fold-change","dir":"Articles","previous_headings":"","what":"Colour genes by log2(fold-change)","title":"hidecan","text":"default, HIDECAN plot, points representing significant markers DE genes coloured according GWAS/DE score. However, possible colour DE genes log2(fold-change) value instead, setting colour_genes_by_score argument FALSE:  Genes negative log2(fold-change) represented shade blue, genes positive log2(fold-change) represented shade red.","code":"hidecan_plot(   gwas_list = x[[\"GWAS\"]],             de_list = x[[\"DE\"]],                 can_list = x[[\"CAN\"]],               score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0,   colour_genes_by_score = FALSE )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"more-than-one-gwas-de-or-candidate-gene-list","dir":"Articles","previous_headings":"","what":"More than one GWAS, DE or candidate gene list","title":"hidecan","text":"hidecan_plot() function can take input lists data-frames GWAS results, DE results candidate genes. way, possible visualise one GWAS DE analyses , example investigating several traits comparing two treatment groups. example, ’ll focus chromosomes 7 8 (clarity plot): ’ll create second data-frame GWAS results shuffling marker scores example dataset: can pass GWAS results data-frames hidecan_plot() function list:  default, two GWAS tracks given unique y-axis labels, can seen . possible customise naming elements input list:","code":"library(dplyr) library(purrr) library(stringr)  ## Retaining only markers and genes on chromosomes 7 and 8 x_small <- x |>    map(~ filter(.x, str_detect(chromosome, \"(07|08)\"))) ## Creating a second GWAS result tibble by shuffling  ## the marker scores from the original data gwas_1 <- x_small[[\"GWAS\"]] gwas_2 <- gwas_1 |>    mutate(score = sample(score)) hidecan_plot(   gwas_list = list(gwas_1, gwas_2),   score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0 ) hidecan_plot(   gwas_list = list(\"Trait 1\" = gwas_1,                     \"Trait 2\" = gwas_2),   score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"defining-chromosomes-length","dir":"Articles","previous_headings":"","what":"Defining chromosomes length","title":"hidecan","text":"default, hidecan_plot() function calculates length different chromosomes based input data, looking maximum position genes markers chromosome. However, also possible pass tibble chromosome length (bp) chrom_length argument.  Note case can’t really see difference computed chromosome length values.","code":"library(tibble)  ## Chromosomes length as recorded in Ensembl Plants potato_chrom_length <- c(   ST4.03ch00 = 45813526,   ST4.03ch01 = 88663952,   ST4.03ch02 = 48614681,   ST4.03ch03 = 62190286,   ST4.03ch04 = 72208621,   ST4.03ch05 = 52070158,   ST4.03ch06 = 59532096,   ST4.03ch07 = 56760843,   ST4.03ch08 = 56938457,   ST4.03ch09 = 61540751,   ST4.03ch10 = 59756223,   ST4.03ch11 = 45475667,   ST4.03ch12 = 61165649 ) |>    ## turn a named vector into a tibble   enframe(name = \"chromosome\",           value = \"length\")  head(potato_chrom_length) #> # A tibble: 6 × 2 #>   chromosome   length #>   <chr>         <dbl> #> 1 ST4.03ch00 45813526 #> 2 ST4.03ch01 88663952 #> 3 ST4.03ch02 48614681 #> 4 ST4.03ch03 62190286 #> 5 ST4.03ch04 72208621 #> 6 ST4.03ch05 52070158 hidecan_plot(   gwas_list = x[[\"GWAS\"]],             de_list = x[[\"DE\"]],                 can_list = x[[\"CAN\"]],   score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0,   chrom_length = potato_chrom_length )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"controlling-the-plot-properties","dir":"Articles","previous_headings":"","what":"Controlling the plot properties","title":"hidecan","text":"hidecan_plot() function offers several arguments control different aspects HIDECAN plot. example, possible specify number rows columns plot , n_rows n_cols arguments. Note one arguments considered (n_rows takes precedence):   addition, possible : add title subtitle plot (title subtitle arguments); control position legend (legend_position argument); control size points (point_size argument); control size labels padding around text candidate genes labels (label_size label_padding arguments).","code":"## Specifying the number of rows hidecan_plot(   gwas_list = x[[\"GWAS\"]],             de_list = x[[\"DE\"]],                 can_list = x[[\"CAN\"]],               score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0,   n_rows = 3 ) ## Specifying the number of columns hidecan_plot(   gwas_list = x[[\"GWAS\"]],             de_list = x[[\"DE\"]],                 can_list = x[[\"CAN\"]],               score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.005),   log2fc_thr = 0,   n_cols = 3 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/articles/hidecan.html","id":"viewport-error","dir":"Articles","previous_headings":"","what":"Viewport error","title":"hidecan","text":"working RStudio, may encounter following error: caused plotting window small. Try increasing size plotting window RStudio console. Alternatively, can save plot R object, use ggplot2::ggsave() save file:","code":"#> Error in grid.Call(C_convert, x, as.integer(whatfrom), as.integer(whatto), : Viewport has zero dimension(s) p <- hidecan_plot(   gwas_list = x[[\"GWAS\"]],   de_list = x[[\"DE\"]],   can_list = x[[\"CAN\"]],   score_thr_gwas = -log10(0.0001),   score_thr_de = -log10(0.05),   log2fc_thr = 0,   label_size = 2 )  ggplot2::ggsave(\"hidecan_plot.pdf\", p, width = 10, height = 10)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Olivia Angelin-Bonnet. Author, maintainer.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Angelin-Bonnet O (2022). hidecan: Hidecan plots generator. R package version 0.0.0.9000, https://shiny-adventure-acfe02d1.pages.github.io/.","code":"@Manual{,   title = {hidecan: Hidecan plots generator},   author = {Olivia Angelin-Bonnet},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://shiny-adventure-acfe02d1.pages.github.io/}, }"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/index.html","id":"hidecan","dir":"","previous_headings":"","what":"Hidecan plots generator","title":"Hidecan plots generator","text":"hidecan R package generating HIDECAN plots, visualisations summarising results one Genome-wide association study (GWAS) transcriptomics differential expression (DE) analysis, alongside candidate genes interest.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hidecan plots generator","text":"can install development version hidecan GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"PlantandFoodResearch/hidecan\")"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Hidecan plots generator","text":"hidecan package works follows: takes input one data-frames containing GWAS results, differential expression results list candidate genes interest; computes length chromosome based genomic position markers genes provided input data; filters datasets retain significant markers differentially expressed genes, according threshold score /log2-fold change. fold-change set user, can different GWAS differential expression results. displays position significant markers genes alongside candidate genes (HIDECAN plot). plot can customised user via number parameters (e.g. legend position label size). wrapper function hidecan_plot() performs steps. use demonstrated example dataset:","code":"library(hidecan)  ## Getting an example dataset x <- get_example_data()  hidecan_plot(   gwas_list = x[[\"GWAS\"]],          ## data-frame of GWAS results   de_list = x[[\"DE\"]],              ## data-frame of DE results   can_list = x[[\"CAN\"]],            ## data-frame of candidate genes   score_thr_gwas = -log10(0.0001),  ## sign. threshold for GWAS   score_thr_de = -log10(0.05),      ## sign. threshold for DE   log2fc_thr = 0,                   ## log2FC threshold for DE   label_size = 2                    ## label size for candidate genes )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a CAN_data object — CAN_data","title":"Creates a CAN_data object — CAN_data","text":"input data one row per gene, least following columns:","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a CAN_data object — CAN_data","text":"","code":"CAN_data(dat, keep_rownames_as = NULL)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a CAN_data object — CAN_data","text":"dat Tibble, set candidate genes interest. See Details. keep_rownames_as Character, name column save rownames input data-frame. Default value NULL, .e. rownames discarded.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a CAN_data object — CAN_data","text":"CAN_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a CAN_data object — CAN_data","text":"chromosome: character column, chromosome gene located. start end: numeric, starting end position gene (bp). column position constructed middle value (mean) start end. name: character, name candidate genes displayed.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/CAN_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a CAN_data object — CAN_data","text":"","code":"x <- get_example_data()  CAN_data(x[[\"CAN\"]]) #> # A tibble: 32 × 7 #>    id                    chromosome    start      end name       gene_…¹ posit…² #>    <chr>                 <chr>         <dbl>    <dbl> <chr>      <chr>     <dbl> #>  1 PGSC0003DMG400003155  ST4.03ch03 46757152 46762127 4CL        4-coum…  4.68e7 #>  2 PGSC0003DMG400014223  ST4.03ch03 57466692 57469946 4CL2       4-coum…  5.75e7 #>  3 PGSC0003DMG400011189  ST4.03ch07  1001854  1006278 HQT        HQT      1.00e6 #>  4 PGSC0003DMG400005492  ST4.03ch05 36342746 36347409 PAL        phenyl…  3.63e7 #>  5 PGSC0003DMG400005279  ST4.03ch05 42523943 42525912 peroxidase peroxi…  4.25e7 #>  6 PGSC0003DMG400007782  ST4.03ch03 38537202 38540209 PHO1A      PHO1A    3.85e7 #>  7 PGSC0003DMG400023182  ST4.03ch02 10091564 10093164 LIPIII27   LipIII…  1.01e7 #>  8 PGSC0003DMG400029576  ST4.03ch08 45676042 45677832 PPOs       Polyph…  4.57e7 #>  9 PGSC0003DMG400018924  ST4.03ch08 45778567 45780333 NA         Polyph…  4.58e7 #> 10 PGSC0003DMG400018919  ST4.03ch08 45793661 45794229 NA         Polyph…  4.58e7 #> # … with 22 more rows, and abbreviated variable names ¹​gene_name, ²​position"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a DE_data object — DE_data","title":"Creates a DE_data object — DE_data","text":"Creates DE_data object tibble data-frame differential expression results.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a DE_data object — DE_data","text":"","code":"DE_data(dat, keep_rownames_as = NULL)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a DE_data object — DE_data","text":"dat Tibble, results GWAS analysis. See Details. keep_rownames_as Character, name column save rownames input data-frame. Default value NULL, .e. rownames discarded.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a DE_data object — DE_data","text":"DE_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a DE_data object — DE_data","text":"input data one row per gene transcript, least following columns: chromosome: character column, chromosome gene/transcript located. start end: numeric, starting end position gene/transcript (bp). column position constructed middle value (mean) start end. score padj: numeric, DE score adjusted p-value gene/transcript. column score column missing, constructed -log10(padj). foldChange log2FoldChange: numeric, fold-change log2(fold-change) gene/transcript. column log2FoldChange missing, constructed log2(foldChange).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/DE_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a DE_data object — DE_data","text":"","code":"x <- get_example_data()  DE_data(x[[\"DE\"]]) #> # A tibble: 25,163 × 9 #>    gene              chrom…¹   padj log2Fo…²  start    end label   score posit…³ #>    <chr>             <chr>    <dbl>    <dbl>  <dbl>  <dbl> <chr>   <dbl>   <dbl> #>  1 PGSC0003DMG40001… ST4.03…  0.972  7.28e-4 1.75e5 1.79e5 Seri…  0.0121  1.77e5 #>  2 PGSC0003DMG40004… ST4.03…  0.922 -8.78e-4 4.61e5 4.62e5 N-ac…  0.0352  4.62e5 #>  3 PGSC0003DMG40004… ST4.03… NA      2.87e-3 6.91e5 6.93e5 Gene… NA       6.92e5 #>  4 PGSC0003DMG40002… ST4.03…  0.609  2.93e-2 8.05e5 8.06e5 Cons…  0.215   8.05e5 #>  5 PGSC0003DMG40002… ST4.03…  0.176  1.47e-1 1.25e6 1.25e6 Cons…  0.756   1.25e6 #>  6 PGSC0003DMG40201… ST4.03…  0.950  1.25e-3 1.51e6 1.51e6 Stri…  0.0225  1.51e6 #>  7 PGSC0003DMG40101… ST4.03… NA      2.89e-3 1.54e6 1.54e6 Stri… NA       1.54e6 #>  8 PGSC0003DMG40001… ST4.03…  0.943 -1.86e-3 1.60e6 1.61e6 Gene…  0.0256  1.61e6 #>  9 PGSC0003DMG40002… ST4.03…  0.935  1.44e-3 1.84e6 1.84e6 Gene…  0.0292  1.84e6 #> 10 PGSC0003DMG40002… ST4.03… NA      1.97e-3 2.40e6 2.40e6 Aden… NA       2.40e6 #> # … with 25,153 more rows, and abbreviated variable names ¹​chromosome, #> #   ²​log2FoldChange, ³​position"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a GWAS_data object — GWAS_data","title":"Creates a GWAS_data object — GWAS_data","text":"Creates GWAS_data object tibble data-frame GWAS results.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a GWAS_data object — GWAS_data","text":"","code":"GWAS_data(dat, keep_rownames_as = NULL)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a GWAS_data object — GWAS_data","text":"dat Tibble, results GWAS analysis. See Details. keep_rownames_as Character, name column save rownames input data-frame. Default value NULL, .e. rownames discarded.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a GWAS_data object — GWAS_data","text":"GWAS_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a GWAS_data object — GWAS_data","text":"input data one row per marker, least following columns: chromosome: character column, chromosome marker located. position: numeric, physical position marker along chromosome (bp). score padj: numeric, GWAS score adjusted p-value marker. column score column missing, constructed -log10(padj).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a GWAS_data object — GWAS_data","text":"","code":"x <- get_example_data()  GWAS_data(x[[\"GWAS\"]]) #> # A tibble: 72,847 × 4 #>    id                chromosome position  score #>    <chr>             <chr>         <dbl>  <dbl> #>  1 ST4.03ch00_172333 ST4.03ch00   172333 0.342  #>  2 ST4.03ch00_172690 ST4.03ch00   172690 0.179  #>  3 ST4.03ch00_194668 ST4.03ch00   194668 0.0479 #>  4 ST4.03ch00_194695 ST4.03ch00   194695 0.469  #>  5 ST4.03ch00_194712 ST4.03ch00   194712 0.893  #>  6 ST4.03ch00_275624 ST4.03ch00   275624 0.380  #>  7 ST4.03ch00_303647 ST4.03ch00   303647 0.486  #>  8 ST4.03ch00_303860 ST4.03ch00   303860 0.517  #>  9 ST4.03ch00_303918 ST4.03ch00   303918 0.937  #> 10 ST4.03ch00_598047 ST4.03ch00   598047 1.82   #> # … with 72,837 more rows"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data_from_gwaspoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts information from GWASpoly output — GWAS_data_from_gwaspoly","title":"Extracts information from GWASpoly output — GWAS_data_from_gwaspoly","text":"Extracts GWAS results chomosome length GWASpoly output.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data_from_gwaspoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts information from GWASpoly output — GWAS_data_from_gwaspoly","text":"","code":"GWAS_data_from_gwaspoly(gwaspoly_output, traits = NULL, models = NULL)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data_from_gwaspoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts information from GWASpoly output — GWAS_data_from_gwaspoly","text":"gwaspoly_output GWASpoly.fitted GWASpoly.thresh object (returned GWASpoly::GWASpoly() GWASpoly::set.threshold() functions). traits Character vector, traits GWAS results extracted. NULL (default value), traits present considered. models Character vector, genetic models GWAS results extracted. NULL (default value), genetic models present considered.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/GWAS_data_from_gwaspoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts information from GWASpoly output — GWAS_data_from_gwaspoly","text":"list following elements: gwas_data_list: named list GWAS_data objects, giving markers score possible trait/genetic model combination. names list form trait (genetic model). gwas_data_thr_list: input data GWASpoly.thresh object (GWASpoly::set.threshold() function), named list GwAS_data_thr, significant markers score possible trait/genetic model combination. names list form trait (genetic model). chrom_length: tibble one row per chromosome, giving length (bp) chromosome.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/apply_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters GWAS or DE results based on a threshold — apply_threshold","title":"Filters GWAS or DE results based on a threshold — apply_threshold","text":"Filters markers genes/transcripts based threshold applied GWAS DE score, log2(fold-change) (applicable). set candidate genes, simply returns list. Note markers genes missing score log2(fold-change) removed dataset.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/apply_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters GWAS or DE results based on a threshold — apply_threshold","text":"","code":"apply_threshold(x, score_thr = 0, log2fc_thr = 0)  # S3 method for GWAS_data apply_threshold(x, score_thr = 0, log2fc_thr = 0)  # S3 method for DE_data apply_threshold(x, score_thr = 0, log2fc_thr = 0)  # S3 method for CAN_data apply_threshold(x, score_thr = 0, log2fc_thr = 0)  # S3 method for default apply_threshold(x, score_thr = 0, log2fc_thr = 0)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/apply_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters GWAS or DE results based on a threshold — apply_threshold","text":"x Either GWAS_data, DE_data CAN_data object. score_thr Numeric, threshold use markers' genes/transcripts' score. markers genes score equal higher threshold retained. Default value 0. Ignored CAN_data. log2fc_thr Numeric, threshold use absolute value genes/ transcripts' log2(fold-change). genes/transcripts absolute log2(fold-change) equal higher threshold retained. Ignored GWAS_data CAN_data.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/apply_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters GWAS or DE results based on a threshold — apply_threshold","text":"filtered tibble (class GWAS_data_thr, DE_data_thr CAN_data_thr).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/apply_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters GWAS or DE results based on a threshold — apply_threshold","text":"","code":"x <- get_example_data()  ## For GWAS results apply_threshold(GWAS_data(x[[\"GWAS\"]]), score_thr = 4) #> # A tibble: 37 × 4 #>    id                  chromosome position score #>    <chr>               <chr>         <dbl> <dbl> #>  1 ST4.03ch00_22680252 ST4.03ch00 22680252  4.41 #>  2 ST4.03ch01_6317643  ST4.03ch01  6317643  4.15 #>  3 ST4.03ch01_7671100  ST4.03ch01  7671100  4.43 #>  4 ST4.03ch01_8653747  ST4.03ch01  8653747  4.69 #>  5 ST4.03ch01_12842648 ST4.03ch01 12842648  6.85 #>  6 ST4.03ch01_13334335 ST4.03ch01 13334335  5.24 #>  7 ST4.03ch01_13544786 ST4.03ch01 13544786  4.00 #>  8 ST4.03ch01_42743974 ST4.03ch01 42743974  4.00 #>  9 ST4.03ch01_42949112 ST4.03ch01 42949112  4.18 #> 10 ST4.03ch01_52529264 ST4.03ch01 52529264  4.85 #> # … with 27 more rows  ## For DE results - in second line, no threshold is applied ## on the log2(fold-change) apply_threshold(DE_data(x[[\"DE\"]]), score_thr = -log10(0.05), log2fc_thr = 1) #> # A tibble: 5 × 9 #>   gene                 chromo…¹   padj log2F…²  start    end label score posit…³ #>   <chr>                <chr>     <dbl>   <dbl>  <dbl>  <dbl> <chr> <dbl>   <dbl> #> 1 PGSC0003DMG400029752 ST4.03c… 0.0488    1.61 8.15e7 8.15e7 Gene…  1.31  8.15e7 #> 2 PGSC0003DMG400030266 ST4.03c… 0.0488    1.14 3.49e7 3.49e7 Gene…  1.31  3.49e7 #> 3 PGSC0003DMG400002638 ST4.03c… 0.0184    3.06 5.99e7 5.99e7 Phos…  1.73  5.99e7 #> 4 PGSC0003DMG402030529 ST4.03c… 0.0414    1.10 3.47e6 3.47e6 Cons…  1.38  3.47e6 #> 5 PGSC0003DMG400032247 ST4.03c… 0.0328    1.51 5.40e7 5.40e7 Vici…  1.48  5.40e7 #> # … with abbreviated variable names ¹​chromosome, ²​log2FoldChange, ³​position apply_threshold(DE_data(x[[\"DE\"]]), score_thr = -log10(0.05), log2fc_thr = 0) #> # A tibble: 57 × 9 #>    gene                chrom…¹    padj log2F…²  start    end label score posit…³ #>    <chr>               <chr>     <dbl>   <dbl>  <dbl>  <dbl> <chr> <dbl>   <dbl> #>  1 PGSC0003DMG4000221… ST4.03… 0.0488    0.838 3.80e7 3.80e7 Pept…  1.31  3.80e7 #>  2 PGSC0003DMG4000226… ST4.03… 0.0362   -0.181 5.83e7 5.83e7 Cons…  1.44  5.83e7 #>  3 PGSC0003DMG4000297… ST4.03… 0.0488    1.61  8.15e7 8.15e7 Gene…  1.31  8.15e7 #>  4 PGSC0003DMG4000258… ST4.03… 0.00465   0.438 8.45e7 8.45e7 Phi-2  2.33  8.45e7 #>  5 PGSC0003DMG4000033… ST4.03… 0.0488    0.325 2.26e7 2.26e7 Cons…  1.31  2.26e7 #>  6 PGSC0003DMG4000317… ST4.03… 0.0266    0.768 3.32e7 3.32e7 Leuc…  1.58  3.32e7 #>  7 PGSC0003DMG4000264… ST4.03… 0.0488    0.381 4.14e7 4.14e7 Cons…  1.31  4.14e7 #>  8 PGSC0003DMG4000214… ST4.03… 0.0314    0.663 4.23e7 4.23e7 Home…  1.50  4.23e7 #>  9 PGSC0003DMG4000134… ST4.03… 0.0488   -0.804 5.33e5 5.41e5 SNF2…  1.31  5.37e5 #> 10 PGSC0003DMG4000197… ST4.03… 0.0493   -0.345 9.26e6 9.26e6 Dihy…  1.31  9.26e6 #> # … with 47 more rows, and abbreviated variable names ¹​chromosome, #> #   ²​log2FoldChange, ³​position  ## No effect on the Candidate genes apply_threshold(CAN_data(x[[\"CAN\"]])) #> # A tibble: 32 × 7 #>    id                    chromosome    start      end name       gene_…¹ posit…² #>    <chr>                 <chr>         <dbl>    <dbl> <chr>      <chr>     <dbl> #>  1 PGSC0003DMG400003155  ST4.03ch03 46757152 46762127 4CL        4-coum…  4.68e7 #>  2 PGSC0003DMG400014223  ST4.03ch03 57466692 57469946 4CL2       4-coum…  5.75e7 #>  3 PGSC0003DMG400011189  ST4.03ch07  1001854  1006278 HQT        HQT      1.00e6 #>  4 PGSC0003DMG400005492  ST4.03ch05 36342746 36347409 PAL        phenyl…  3.63e7 #>  5 PGSC0003DMG400005279  ST4.03ch05 42523943 42525912 peroxidase peroxi…  4.25e7 #>  6 PGSC0003DMG400007782  ST4.03ch03 38537202 38540209 PHO1A      PHO1A    3.85e7 #>  7 PGSC0003DMG400023182  ST4.03ch02 10091564 10093164 LIPIII27   LipIII…  1.01e7 #>  8 PGSC0003DMG400029576  ST4.03ch08 45676042 45677832 PPOs       Polyph…  4.57e7 #>  9 PGSC0003DMG400018924  ST4.03ch08 45778567 45780333 NA         Polyph…  4.58e7 #> 10 PGSC0003DMG400018919  ST4.03ch08 45793661 45794229 NA         Polyph…  4.58e7 #> # … with 22 more rows, and abbreviated variable names ¹​gene_name, ²​position"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/combine_chrom_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes chromosomes' length from list — combine_chrom_length","title":"Computes chromosomes' length from list — combine_chrom_length","text":"Computes length (bp) chromosome list GWAS DE results well candidate gene lists.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/combine_chrom_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes chromosomes' length from list — combine_chrom_length","text":"","code":"combine_chrom_length(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/combine_chrom_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes chromosomes' length from list — combine_chrom_length","text":"x list GWAS_data, DE_data CAN_data objects.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/combine_chrom_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes chromosomes' length from list — combine_chrom_length","text":"tibble two columns: chromosome (chromosome name) length (chromosome length base pair).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/combine_chrom_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes chromosomes' length from list — combine_chrom_length","text":"","code":"x <- get_example_data() y <- list(\"GWAS\" = GWAS_data(x[[\"GWAS\"]]),           \"DE\" = DE_data(x[[\"DE\"]]),           \"CAN\" = CAN_data(x[[\"CAN\"]]))  combine_chrom_length(y) #> # A tibble: 13 × 2 #>    chromosome   length #>    <chr>         <dbl> #>  1 ST4.03ch00 45813526 #>  2 ST4.03ch01 88627702 #>  3 ST4.03ch02 48614228 #>  4 ST4.03ch03 62263578 #>  5 ST4.03ch04 72170119 #>  6 ST4.03ch05 52040326 #>  7 ST4.03ch06 59476545 #>  8 ST4.03ch07 56715111 #>  9 ST4.03ch08 56937627 #> 10 ST4.03ch09 61539681 #> 11 ST4.03ch10 59687482 #> 12 ST4.03ch11 45409456 #> 13 ST4.03ch12 61152223"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/compute_chrom_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes chromosomes' length — compute_chrom_length","title":"Computes chromosomes' length — compute_chrom_length","text":"Computes length (bp) chromosome maximum position markers genes chromosome.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/compute_chrom_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes chromosomes' length — compute_chrom_length","text":"","code":"compute_chrom_length(x)  # S3 method for GWAS_data compute_chrom_length(x)  # S3 method for DE_data compute_chrom_length(x)  # S3 method for CAN_data compute_chrom_length(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/compute_chrom_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes chromosomes' length — compute_chrom_length","text":"x Either GWAS_data, DE_data CAN_data object.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/compute_chrom_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes chromosomes' length — compute_chrom_length","text":"tibble two columns: chromosome (chromosome name) length (chromosome length base pair).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/compute_chrom_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes chromosomes' length — compute_chrom_length","text":"","code":"x <- get_example_data()  compute_chrom_length(GWAS_data(x[[\"GWAS\"]])) #> # A tibble: 13 × 2 #>    chromosome   length #>    <chr>         <dbl> #>  1 ST4.03ch00 45467783 #>  2 ST4.03ch01 88589716 #>  3 ST4.03ch02 48614228 #>  4 ST4.03ch03 62263578 #>  5 ST4.03ch04 72139135 #>  6 ST4.03ch05 52040302 #>  7 ST4.03ch06 59434834 #>  8 ST4.03ch07 56713057 #>  9 ST4.03ch08 56937627 #> 10 ST4.03ch09 61537423 #> 11 ST4.03ch10 59687482 #> 12 ST4.03ch11 45409344 #> 13 ST4.03ch12 61148638 compute_chrom_length(DE_data(x[[\"DE\"]])) #> # A tibble: 13 × 2 #>    chromosome   length #>    <chr>         <dbl> #>  1 ST4.03ch00 45813526 #>  2 ST4.03ch01 88627702 #>  3 ST4.03ch02 48578978 #>  4 ST4.03ch03 62258929 #>  5 ST4.03ch04 72170119 #>  6 ST4.03ch05 52040326 #>  7 ST4.03ch06 59476545 #>  8 ST4.03ch07 56715111 #>  9 ST4.03ch08 56849780 #> 10 ST4.03ch09 61539681 #> 11 ST4.03ch10 59684952 #> 12 ST4.03ch11 45409456 #> 13 ST4.03ch12 61152223 compute_chrom_length(CAN_data(x[[\"CAN\"]])) #> # A tibble: 7 × 2 #>   chromosome   length #>   <chr>         <dbl> #> 1 ST4.03ch02 44537572 #> 2 ST4.03ch03 57469946 #> 3 ST4.03ch04 63041935 #> 4 ST4.03ch05 42525912 #> 5 ST4.03ch07 51457407 #> 6 ST4.03ch08 45907390 #> 7 ST4.03ch12 55092326"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/create_hidecan_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a HIDECAN plot — create_hidecan_plot","title":"Creates a HIDECAN plot — create_hidecan_plot","text":"Creates HIDECAN plot list filtered GWAS DE results /candidate genes.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/create_hidecan_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a HIDECAN plot — create_hidecan_plot","text":"","code":"create_hidecan_plot(   x,   chrom_length,   colour_genes_by_score = TRUE,   remove_empty_chrom = FALSE,   chroms = NULL,   title = NULL,   subtitle = NULL,   n_rows = NULL,   n_cols = 2,   legend_position = \"bottom\",   point_size = 3,   label_size = 3.5,   label_padding = 0.15 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/create_hidecan_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a HIDECAN plot — create_hidecan_plot","text":"x list GWAS_data_thr, DE_data_thr /CAN_data_thr produced apply_threshold() function. named, names appended y-axis labels (use ' ' empty name list). chrom_length Tibble columns chromosome length, giving chromosome length bp (see combine_chrom_length() function). colour_genes_by_score Logical, whether colour genes score (TRUE) log2(fold-change) (FALSE). Default value TRUE. remove_empty_chrom Logical, chromosomes significant markers/genes candidate genes removed plot? Default value FALSE. chroms Character vector, name chromosomes include plot. title Character, title plot. Default value NULL (.e. title added plot). subtitle Character, subtitle plot. Default value NULL (.e. subtitle added plot). n_rows Integer, number rows chromosomes create plot. Default value NULL. n_cols Integer, number columns chromosomes create plot. Default value 2. set NULL n_rows NULL. legend_position Character, position legend plot. Can bottom (default value), top, right, left none. point_size Numeric, size points plot. Default value 3. label_size Numeric, size gene labels plot. Default value 3.5 (geom_label_repel). label_padding Numeric, amount padding around gene labels plot, unit number. Default value 0.15 (geom_label_repel).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/create_hidecan_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a HIDECAN plot — create_hidecan_plot","text":"ggplot.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/create_hidecan_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a HIDECAN plot — create_hidecan_plot","text":"","code":"if (FALSE) { x <- get_example_data() y <- list(\"GWAS\" = GWAS_data(x[[\"GWAS\"]]),           \"DE\" = DE_data(x[[\"DE\"]]),           \"CAN\" = CAN_data(x[[\"CAN\"]]))  chrom_length <- combine_chrom_length(y)  z <- list(   apply_threshold(y[[\"GWAS\"]], score_thr = 4),   apply_threshold(y[[\"DE\"]], score_thr = 1.3, log2fc_thr = 0.5),   apply_threshold(y[[\"CAN\"]]) )  create_hidecan_plot(z,                     chrom_length,                     label_size = 2)  ## Colour genes according to their fold-change create_hidecan_plot(z,                     chrom_length,                     colour_genes_by_score = FALSE,                     label_size = 2)  ## Add names to the datasets create_hidecan_plot(setNames(z, c(\"Genomics\", \"RNAseq\", \"My list\")),                     chrom_length,                     colour_genes_by_score = FALSE,                     label_size = 2)  ## Add names to some of the datasets only (e.g. not for GWAS results) create_hidecan_plot(setNames(z, c(\" \", \"RNAseq\", \"My list\")),                     chrom_length,                     colour_genes_by_score = FALSE,                     label_size = 2) }"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-check_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether some columns are present in a tibble — .check_cols","title":"Checks whether some columns are present in a tibble — .check_cols","text":"Checks whether columns present tibble","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-check_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether some columns are present in a tibble — .check_cols","text":"","code":".check_cols(x, col_names, param_name = \"Input data-frame\")"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-check_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether some columns are present in a tibble — .check_cols","text":"x Tibble col_names character vector column names param_name Character, name dataframe use error message.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-check_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether some columns are present in a tibble — .check_cols","text":"invisible NULL","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-compute_chrom_length_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes chromosomes' length for a tibble of genes — .compute_chrom_length_genes","title":"Computes chromosomes' length for a tibble of genes — .compute_chrom_length_genes","text":"Computes length (bp) chromosome maximum position genes chromosome.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-compute_chrom_length_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes chromosomes' length for a tibble of genes — .compute_chrom_length_genes","text":"","code":".compute_chrom_length_genes(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-compute_chrom_length_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes chromosomes' length for a tibble of genes — .compute_chrom_length_genes","text":"x Either DE_data CAN_data object.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/dot-compute_chrom_length_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes chromosomes' length for a tibble of genes — .compute_chrom_length_genes","text":"tibble two columns: chromosome (chromosome name) length (chromosome length base pair).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset — get_example_data","title":"Example dataset — get_example_data","text":"Returns list example datasets.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset — get_example_data","text":"","code":"get_example_data()"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example dataset — get_example_data","text":"list following elements: GWAS: tibble GWAS results, columns id, chromosome, position score. DE: tibble differential expression results, columns gene, chromosome, padj, log2FoldChange, start, end label. CAN: tibble candidate genes, columns id, chromosome, start, end, name gene_name.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_gwaspoly_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"GWASpoly example dataset — get_gwaspoly_example_data","title":"GWASpoly example dataset — get_gwaspoly_example_data","text":"Returns list GWASpoly example datasets.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_gwaspoly_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GWASpoly example dataset — get_gwaspoly_example_data","text":"","code":"get_gwaspoly_example_data(with_thresholds = TRUE)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_gwaspoly_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GWASpoly example dataset — get_gwaspoly_example_data","text":"with_thresholds Logical, GWASpoly object returned contain significance threshold? Default value TRUE.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/get_gwaspoly_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GWASpoly example dataset — get_gwaspoly_example_data","text":"with_thresholds TRUE: GWASpoly.thresh object (returned GWASpoly::set.threshold() function). with_thresholds FALSE: GWASpoly.fitted object (returned GWASpoly::GWASpoly() function).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to create a HIDECAN plot — hidecan_plot","title":"Wrapper to create a HIDECAN plot — hidecan_plot","text":"Wrapper function create HIDECAN plot GWAS results, DE results candidate genes.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to create a HIDECAN plot — hidecan_plot","text":"","code":"hidecan_plot(   gwas_list = NULL,   de_list = NULL,   can_list = NULL,   score_thr_gwas = 4,   score_thr_de = 2,   log2fc_thr = 1,   chrom_length = NULL,   colour_genes_by_score = TRUE,   remove_empty_chrom = FALSE,   chroms = NULL,   title = NULL,   subtitle = NULL,   n_rows = NULL,   n_cols = 2,   legend_position = \"bottom\",   point_size = 3,   label_size = 3.5,   label_padding = 0.15 )"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to create a HIDECAN plot — hidecan_plot","text":"gwas_list Data-frame list data-frames containing GWAS results, least chromosome, position either padj score columns. named list, names used plot. de_list Data-frame list data-frames containing DE results, least chromosome, start, end, log2FoldChange either padj score columns. named list, names used plot. can_list Data-frame list data-frames containing candidate genes, least chromosome, start, end name columns. named list, names used plot. score_thr_gwas Numeric, score threshold GWAS results used select markers plotted. Default value 4. score_thr_de Numeric, score threshold DE results used select markers plotted. Default value 2. log2fc_thr Numeric, log2(fold-change) threshold used select genes plotted. Default value 1. chrom_length Optional, tibble columns chromosome length, giving chromosome length bp. NULL (default), inferred GWAS, DE candidate gene data. colour_genes_by_score Logical, whether colour genes score (TRUE) log2(fold-change) (FALSE). Default value TRUE. remove_empty_chrom Logical, chromosomes significant markers/genes candidate genes removed plot? Default value FALSE. chroms Character vector, name chromosomes include plot. title Character, title plot. Default value NULL (.e. title added plot). subtitle Character, subtitle plot. Default value NULL (.e. subtitle added plot). n_rows Integer, number rows chromosomes create plot. Default value NULL. n_cols Integer, number columns chromosomes create plot. Default value 2. set NULL n_rows NULL. legend_position Character, position legend plot. Can bottom (default value), top, right, left none. point_size Numeric, size points plot. Default value 3. label_size Numeric, size gene labels plot. Default value 3.5 (geom_label_repel). label_padding Numeric, amount padding around gene labels plot, unit number. Default value 0.15 (geom_label_repel).","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to create a HIDECAN plot — hidecan_plot","text":"ggplot.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to create a HIDECAN plot — hidecan_plot","text":"","code":"if (FALSE) { x <- get_example_data()  ## Typical example with one GWAs result table, one DE result table and ## one table of candidate genes hidecan_plot(gwas_list = x[[\"GWAS\"]],              de_list = x[[\"DE\"]],              can_list = x[[\"CAN\"]],              score_thr_gwas = -log10(0.0001),              score_thr_de = -log10(0.005),              log2fc_thr = 0,              label_size = 2)  ## Example with two sets of GWAS results hidecan_plot(gwas_list = list(x[[\"GWAS\"]], x[[\"GWAS\"]]),              score_thr_gwas = 4)  ## Example with two sets of DE results, with names hidecan_plot(de_list = list(\"X vs Y\" = x[[\"DE\"]],                             \"X vs Z\" = x[[\"DE\"]]),              score_thr_de = -log10(0.05),              log2fc_thr = 0) }"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot_from_gwaspoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","title":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","text":"Creates HIDECAN plot GWAS results GWASpoly.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot_from_gwaspoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","text":"","code":"hidecan_plot_from_gwaspoly(gwaspoly_output, traits = NULL, models = NULL, ...)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot_from_gwaspoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","text":"gwaspoly_output GWASpoly.thresh object (returned GWASpoly::set.threshold() function). traits Character vector, traits GWAS results extracted. NULL (default value), traits present considered. models Character vector, genetic models GWAS results extracted. NULL (default value), genetic models present considered. ... arguments passed create_hidecan_plot() function.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot_from_gwaspoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","text":"ggplot.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/hidecan_plot_from_gwaspoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a HIDECAN plot from GWASpoly output — hidecan_plot_from_gwaspoly","text":"","code":"if (FALSE) { x <- get_gwaspoly_example_data(with_thresholds = TRUE)  hidecan_plot_from_gwaspoly(x) }"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_CAN_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CAN_data constructor — new_CAN_data","title":"CAN_data constructor — new_CAN_data","text":"CAN_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_CAN_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CAN_data constructor — new_CAN_data","text":"","code":"new_CAN_data(dat)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_CAN_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CAN_data constructor — new_CAN_data","text":"dat Tibble, containing information genes interest, least columns chromosome, start, end, position name.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_CAN_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CAN_data constructor — new_CAN_data","text":"CAN_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_DE_data.html","id":null,"dir":"Reference","previous_headings":"","what":"DE_data constructor — new_DE_data","title":"DE_data constructor — new_DE_data","text":"DE_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_DE_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DE_data constructor — new_DE_data","text":"","code":"new_DE_data(dat)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_DE_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DE_data constructor — new_DE_data","text":"dat Tibble, results differential expression analysis, least columns chromosome, score, log2FoldChange, start, end position.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_DE_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DE_data constructor — new_DE_data","text":"DE_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_GWAS_data.html","id":null,"dir":"Reference","previous_headings":"","what":"GWAS_data constructor — new_GWAS_data","title":"GWAS_data constructor — new_GWAS_data","text":"GWAS_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_GWAS_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GWAS_data constructor — new_GWAS_data","text":"","code":"new_GWAS_data(dat)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_GWAS_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GWAS_data constructor — new_GWAS_data","text":"dat Tibble, results GWAS analysis, least columns chromosome, position score.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/new_GWAS_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GWAS_data constructor — new_GWAS_data","text":"GWAS_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/run_hidecan_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Launches the HIDECAN shiny app — run_hidecan_shiny","title":"Launches the HIDECAN shiny app — run_hidecan_shiny","text":"Starts HIDECAN shiny app. app reads csv data produce HIDECAN plot.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/run_hidecan_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launches the HIDECAN shiny app — run_hidecan_shiny","text":"","code":"run_hidecan_shiny()"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_CAN_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks validity of input for CAN_data constructor — validate_CAN_data","title":"Checks validity of input for CAN_data constructor — validate_CAN_data","text":"Checks validity input CAN_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_CAN_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks validity of input for CAN_data constructor — validate_CAN_data","text":"","code":"validate_CAN_data(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_CAN_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks validity of input for CAN_data constructor — validate_CAN_data","text":"x, CAN_data object constructed via new_CAN_data.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_CAN_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks validity of input for CAN_data constructor — validate_CAN_data","text":"CAN_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_DE_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks validity of input for DE_data constructor — validate_DE_data","title":"Checks validity of input for DE_data constructor — validate_DE_data","text":"Checks validity input DE_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_DE_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks validity of input for DE_data constructor — validate_DE_data","text":"","code":"validate_DE_data(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_DE_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks validity of input for DE_data constructor — validate_DE_data","text":"x, DE_data object constructed via new_DE_data.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_DE_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks validity of input for DE_data constructor — validate_DE_data","text":"DE_data object, .e. tibble.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_GWAS_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks validity of input for GWAS_data constructor — validate_GWAS_data","title":"Checks validity of input for GWAS_data constructor — validate_GWAS_data","text":"Checks validity input GWAS_data constructor","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_GWAS_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks validity of input for GWAS_data constructor — validate_GWAS_data","text":"","code":"validate_GWAS_data(x)"},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_GWAS_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks validity of input for GWAS_data constructor — validate_GWAS_data","text":"x, GWAS_data object constructed via new_GWAS_data.","code":""},{"path":"https://shiny-adventure-acfe02d1.pages.github.io/reference/validate_GWAS_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks validity of input for GWAS_data constructor — validate_GWAS_data","text":"GWAS_data object, .e. tibble.","code":""}]
